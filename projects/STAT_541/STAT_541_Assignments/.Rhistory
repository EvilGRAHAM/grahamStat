,ChiSq = (Count - Expected)^(2) / Expected
) %>%
select(ChiSq) %>%
sum()
data_pred
data_pred <-
data_tidy %>%
select(-Response) %>%
unique() %>%
cbind(
predict(
object = model
,newdata =
data_tidy %>%
select(-Response) %>%
unique()
,type = "probs"
)
) %>%
as.tibble() %>%
gather(
key = Response
,value = Probability
,-c(Size, Lake)
) %>%
mutate(Response = as.factor(Response))
data_total <-
data_tidy %>%
group_by(Size, Lake) %>%
count() %>%
ungroup() %>%
rename(Total = n)
data_count <-
data_tidy %>%
group_by_all() %>%
count() %>%
ungroup() %>%
rename(Count = n)
data_count %>%
left_join(
y = data_total
,by = c("Size", "Lake")
) %>%
left_join(
y = data_pred
,by = c("Size", "Lake", "Response")
) %>%
mutate(
Expected = Total * Probability
,ChiSq = (Count - Expected)^(2) / Expected
) %>%
select(ChiSq) %>%
sum()
data_total <-
data_tidy %>%
group_by_at(
vars(
all.vars(formula(model))[all.vars(formula(model)) != model$terms[[2]]]
)
) %>%
count() %>%
ungroup() %>%
rename(Total = n)
data_total
formula(model)
formula(model)[all.vars(formula(model)) != model$terms[[2]]]
all.vars(formula(model))[all.vars(formula(model)) != model$terms[[2]]]
data_count %>%
left_join(
y = data_total
,by = all.vars(formula(model))[all.vars(formula(model)) != model$terms[[2]]]
) %>%
left_join(
y = data_pred
,by = c("Size", "Lake", "Response")
) %>%
mutate(
Expected = Total * Probability
,ChiSq = (Count - Expected)^(2) / Expected
) %>%
select(ChiSq) %>%
sum()
all.vars(formula(model))
data_count %>%
left_join(
y = data_total
,by = all.vars(formula(model))[all.vars(formula(model)) != model$terms[[2]]]
) %>%
left_join(
y = data_pred
,by = all.vars(formula(model))
) %>%
mutate(
Expected = Total * Probability
,ChiSq = (Count - Expected)^(2) / Expected
) %>%
select(ChiSq) %>%
sum()
data_count %>%
left_join(
y = data_total
,by = all.vars(formula(model))[all.vars(formula(model)) != model$terms[[2]]]
) %>%
left_join(
y = data_pred
,by = c(all.vars(formula(model))[all.vars(formula(model)) != model$terms[[2]]], "Response")
) %>%
mutate(
Expected = Total * Probability
,ChiSq = (Count - Expected)^(2) / Expected
) %>%
select(ChiSq) %>%
sum()
data_pred <-
data_tidy %>%
select(-Response) %>%
unique() %>%
cbind(
predict(
object = model
,newdata =
data_tidy %>%
select(-Response) %>%
unique()
,type = "probs"
)
) %>%
as.tibble() %>%
gather(
key = Response
,value = Probability
,-all.vars(formula(model))[all.vars(formula(model)) != model$terms[[2]]]
) %>%
mutate(Response = as.factor(Response))
all.vars(formula(model))[all.vars(formula(model)) != model$terms[[2]]]
data_tidy %>%
select(-Response) %>%
unique() %>%
cbind(
predict(
object = model
,newdata =
data_tidy %>%
select(-Response) %>%
unique()
,type = "probs"
)
) %>%
as.tibble()
data_pred <-
data_tidy %>%
select(-Response) %>%
unique() %>%
cbind(
predict(
object = model
,newdata =
data_tidy %>%
select(-Response) %>%
unique()
,type = "probs"
)
) %>%
as.tibble() %>%
gather(
key = Response
,value = Probability
,-!!all.vars(formula(model))[all.vars(formula(model)) != model$terms[[2]]]
) %>%
mutate(Response = as.factor(Response))
data_pred
data_tidy <-
gator_ct %>%
flatten_ct() %>%
rename(Response = !!reponse)
response <- "Food"
data_tidy <-
gator_ct %>%
flatten_ct() %>%
rename(Response = !!response)
data_tidy
data_tidy <-
gator_ct %>%
flatten_ct() %>%
rename(Response = !!as.character(model$terms[[2]]))
source('~/.active-rstudio-document', echo=TRUE)
lung_logit <-
flatten_ct() %>%
glm(
Lung ~ Smoking
,family = binomial
,data = .
)
lung_logit <-
lung_cancer %>%
flatten_ct() %>%
glm(
Lung ~ Smoking
,family = binomial
,data = .
)
model <- lung_logit
data_tidy <-
lung_ct %>%
flatten_ct() %>%
rename(Response = !!as.character(model$terms[[2]]))
data_tidy <-
lung_cancer %>%
flatten_ct() %>%
rename(Response = !!as.character(model$terms[[2]]))
data_pred <-
data_tidy %>%
select(-Response) %>%
unique() %>%
cbind(
predict(
object = model
,newdata =
data_tidy %>%
select(-Response) %>%
unique()
,type = "probs"
)
) %>%
as.tibble() %>%
gather(
key = Response
,value = Probability
,-!!all.vars(formula(model))[all.vars(formula(model)) != model$terms[[2]]]
) %>%
mutate(Response = as.factor(Response))
data_pred <-
data_tidy %>%
select(-Response) %>%
unique() %>%
cbind(
predict(
object = model
,newdata =
data_tidy %>%
select(-Response) %>%
unique()
,type = "response"
)
) %>%
as.tibble() %>%
gather(
key = Response
,value = Probability
,-!!all.vars(formula(model))[all.vars(formula(model)) != model$terms[[2]]]
) %>%
mutate(Response = as.factor(Response))
data_pred
data_tidy %>%
select(-Response) %>%
unique() %>%
cbind(
predict(
object = model
,newdata =
data_tidy %>%
select(-Response) %>%
unique()
,type = "response"
)
)
data_tidy %>%
select(-Response) %>%
unique() %>%
cbind(
predict(
object = model
,newdata =
data_tidy %>%
# select(-Response) %>%
unique()
,type = "response"
)
) %>%
as.tibble()
data_pred <-
data_tidy %>%
select(-Response) %>%
unique() %>%
cbind(
predict(
object = model
,newdata =
data_tidy %>%
select(-Response) %>%
unique()
,type = "response"
)
) %>%
as.tibble() %>%
gather(
key = Response
,value = Probability
,-!!all.vars(formula(model))[all.vars(formula(model)) != model$terms[[2]]]
) %>%
mutate(Response = as.factor(Response))
predict(
object = model
,newdata =
data_tidy %>%
select(-Response) %>%
unique()
,type = "response"
)
data_tidy %>%
select(-Response) %>%
unique()
lung_logit
class(lung_logit)
class(gator_logit)
lung_probit <-
lung_cancer %>%
flatten_ct() %>%
glm(
Lung ~ Smoking
,family = binomial(link = "probit)
,data = .
)
lung_probit <-
lung_cancer %>%
flatten_ct() %>%
glm(
Lung ~ Smoking
,family = binomial(link = "probit")
,data = .
)
class(lung_probit)
model <- gator_logit
data_tidy <-
gator_ct %>%
flatten_ct() %>%
rename(Response = !!as.character(model$terms[[2]]))
source('~/.active-rstudio-document', echo=TRUE)
data_pred <-
data_tidy %>%
select(-Response) %>%
unique() %>%
cbind(
predict(
object = model
,newdata =
data_tidy %>%
select(-Response) %>%
unique()
,type = "prob"
)
) %>%
as.tibble() %>%
gather(
key = Response
,value = Probability
,-!!all.vars(formula(model))[all.vars(formula(model)) != model$terms[[2]]]
) %>%
mutate(Response = as.factor(Response))
source('~/.active-rstudio-document', echo=TRUE)
model$data
gator_logit <-
multinom(
Food ~ Size + Lake
,data =   gator_ct %>%
flatten_ct()
)
gator_logit
gator_logit$data
gator_ct <-
array(
data =
c(
23, 7, 4, 0, 2, 1, 2, 3, 8, 5
,5, 13, 11, 8, 1, 6, 0, 1, 3, 0
,5, 8, 11, 7, 2, 6, 1, 3, 5, 5
,16, 17, 19, 1, 1, 0, 2, 1, 3, 3
)
,dim = c(2, 5, 4)
,dimnames = list(
Size = c("<=2.3", ">2.3")
,Food = c(
"Fish"
,"Invertebrate"
,"Reptile"
,"Bird"
,"People/Other"
)
,Lake =
c(
"Hancock"
,"Oklawaha"
,"Trafford"
,"George"
)
)
)
gator_logit <-
gator_ct %>%
flatten_ct() %>%
multinom(
Food ~ Size + Lake
,data = .
)
summary(gator_logit)
model <- gator_logit
data_tidy <-
gator_ct %>%
flatten_ct() %>%
rename(Response = !!as.character(model$terms[[2]]))
data_pred <-
data_tidy %>%
select(-Response) %>%
unique() %>%
cbind(
predict(
object = model
,newdata =
data_tidy %>%
select(-Response) %>%
unique()
,type = "prob"
)
) %>%
as.tibble() %>%
gather(
key = Response
,value = Probability
,-!!all.vars(formula(model))[all.vars(formula(model)) != model$terms[[2]]]
) %>%
mutate(Response = as.factor(Response))
data_total <-
data_tidy %>%
group_by_at(
vars(
all.vars(formula(model))[all.vars(formula(model)) != model$terms[[2]]]
)
) %>%
count() %>%
ungroup() %>%
rename(Total = n)
data_count <-
data_tidy %>%
group_by_all() %>%
count() %>%
ungroup() %>%
rename(Count = n)
data_count %>%
left_join(
y = data_total
,by = all.vars(formula(model))[all.vars(formula(model)) != model$terms[[2]]]
) %>%
left_join(
y = data_pred
,by = c(all.vars(formula(model))[all.vars(formula(model)) != model$terms[[2]]], "Response")
) %>%
mutate(
Expected = Total * Probability
,ChiSq = (Count - Expected)^(2) / Expected
) %>%
select(ChiSq) %>%
sum()
source('~/Programs/R Programs/Cumulative Logit Goodness of Fit.R', echo=TRUE)
source('~/Programs/R Programs/Cumulative Logit Goodness of Fit.R', echo=TRUE)
summary(gator_logit)
data_count %>%
left_join(
y = data_total
,by = all.vars(formula(model))[all.vars(formula(model)) != model$terms[[2]]]
) %>%
left_join(
y = data_pred
,by = c(all.vars(formula(model))[all.vars(formula(model)) != model$terms[[2]]], "Response")
) %>%
mutate(
Expected = Total * Probability
,GSq = 2 * Count * log(Response / Count)
) %>%
select(GSq) %>%
sum()
data_count %>%
left_join(
y = data_total
,by = all.vars(formula(model))[all.vars(formula(model)) != model$terms[[2]]]
) %>%
left_join(
y = data_pred
,by = c(all.vars(formula(model))[all.vars(formula(model)) != model$terms[[2]]], "Response")
) %>%
mutate(
Expected = Total * Probability
,GSq = 2 * Count * log(Count / Expected)
) %>%
select(GSq) %>%
sum()
data_count %>%
left_join(
y = data_total
,by = all.vars(formula(model))[all.vars(formula(model)) != model$terms[[2]]]
) %>%
left_join(
y = data_pred
,by = c(all.vars(formula(model))[all.vars(formula(model)) != model$terms[[2]]], "Response")
) %>%
mutate(
Expected = Total * Probability
,GSq = 2 * Count * log(Count / Expected)
) %>%
select(GSq) %>%
sum()
source('~/Programs/R Programs/Cumulative Logit Goodness of Fit.R', echo=TRUE)
source('~/Programs/R Programs/Cumulative Logit Goodness of Fit.R', echo=TRUE)
